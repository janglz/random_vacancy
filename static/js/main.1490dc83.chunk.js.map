{"version":3,"sources":["loader.svg","spinner.js","SelectCity.js","App.js","index.js"],"names":["Spinner","className","src","spinner","alt","React","Component","SelectCity","props","handleChange","bind","e","city","this","cities","find","el","code","target","value","onHandleClick","citiesList","map","name","onSubmit","preventDefault","onChange","Vacancy","id","formatted","description","trim","replace","split","filter","line","match","title","salary","selectCity","href","url","VacancyCard","state","loading","vacancies","currentVacancy","handleClick","getCities","a","fetch","then","response","json","results","forEach","vacancy","region","push","i","findIndex","currentCity","result","data","setState","getVacancies","Math","floor","random","length","element","duty","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1490dc83.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader.941af6e2.svg\";","import React from \"react\";\nimport spinner from './loader.svg';\n\nexport default class Spinner extends React.Component {\n    render() {\n        return (\n            <div className=\"loader-container\">\n                <img src={spinner} className=\"loader-img\" alt=\"logo\" />\n            </div>\n        )\n    }\n}","import React from \"react\";\n\nclass SelectCity extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        const city = this.props.cities.find(el => el.code === e.target.value)\n        this.props.onHandleClick(city)\n    }\n\n    render() {\n        const citiesList = this.props.cities.map((city) => {\n            return <option key={city.code} value={city.code}>{city.name}</option>\n        })\n\n        return (\n            <form className=\"form inline\" onSubmit={(e)=> e.preventDefault()}>\n                <label>\n                    <select className=\"no-border select\" value={this.props.city.code} onChange={this.handleChange} >\n                    {citiesList} \n                    </select>\n                </label>\n            </form>\n        )\n    }\n}\n\nexport default SelectCity;","import Spinner from './spinner.js';\nimport SelectCity from './SelectCity.js'\nimport './App.css';\nimport React from 'react';\n\nclass Vacancy extends React.Component {\n  render() {\n    let id = 0\n    const description = this.props.description.trim().\n      replace(/<\\/?[a-zA-Z]+>|\\u2022|nbsp|&/gi, '').\n      split(/\\n|;/gi).\n      filter(line => line.match(/\\S/gi))\n    const formatted = description.map((line) => <li key={id += 1}>{line}{'\\n'}</li>)\n\n    return (\n      <div className=\"vacancy-card\">\n        <p>Вакансия: <span className=\"bold\">{this.props.title}</span></p>\n        <p>Зарплата: <span className=\"bold\">{this.props.salary}</span></p>\n        <p>Регион: <span className=\"bold\">{this.props.selectCity}</span></p>\n        {/* <div></div> */}\n        \n        <p>Обязанности:</p>\n        <ul>{formatted}\n          <li className=\"justified\"><a className=\"moving-bg\" href={this.props.url}>Подробнее...</a></li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nclass VacancyCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      cities: null,\n      city: {\n        name: 'Москва',\n        code: 7700000000000\n      },\n      vacancies: [],\n      currentVacancy: null,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.getCities = this.getCities.bind(this);\n  }\n\n  // static defaultProps = {\n  //   city: {\n  //     name: 'Москва',\n  //     code: 7700000000000\n  //   }\n  // };\n\n  async getCities() {\n    const cities = [];\n    const data = await fetch(`https://opendata.trudvsem.ru/api/v1/vacancies?text=frontend`).\n    then(response => response.json());\n    data.results.vacancies.forEach(vacancy => {\n      const city = {\n        'code': vacancy.vacancy.region['region_code'],\n        'name': vacancy.vacancy.region.name\n      }\n      cities.push(city);\n    })\n    return cities.filter((city,i)=>cities.findIndex(currentCity=>(city.code === currentCity.code))===i)\n  }\n\n  async getVacancies(city) {\n    const data = await fetch(`https://opendata.trudvsem.ru/api/v1/vacancies/region/${city.code}?text=frontend`).\n    then(result => result.json()).then(result=>result);\n    return data;\n  }\n  \n  async handleClick(city = this.state.city) {\n    this.setState({\n      loading: true,\n    })\n    const cities = await this.getCities();\n    const data = await this.getVacancies(city);\n    const vacancies = [];\n    data.results.vacancies.forEach(vacancy => vacancies.push(vacancy))\n    this.setState({\n      loading: false,\n      cities: cities,\n      city: city,\n      vacancies: vacancies,\n      currentVacancy: vacancies[Math.floor(Math.random() * vacancies.length)].vacancy\n    })\n  }\n\n  componentDidMount() {\n    this.handleClick()\n  }\n\n  render() {\n    if (this.state.loading) return <Spinner />\n\n    const city = this.state.city\n    const element = (<SelectCity className=\"inline\" vacancies={this.state.vacancies} cities={this.state.cities} city={city} onHandleClick={this.handleClick}/>)\n    return (\n      <div>\n      <div className=\"container\">\n        <div className=\"line__wrap\">\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n        <h1>Случайная frontend-вакансия</h1>\n        <Vacancy\n          title={this.state.currentVacancy['job-name']}\n          salary={this.state.currentVacancy.salary}\n          region={this.state.city.name}\n          url={this.state.currentVacancy['vac_url']}\n          description={this.state.currentVacancy.duty}\n          id={this.state.currentVacancy.id}\n          selectCity={element}\n        />\n        <button className=\"button moving-bg\" onClick={() => this.handleClick(this.state.city)}>Ещё вакансия!</button>\n      </div>\n      <p>Найдено вакансий в регионе: {this.state.vacancies.length}</p>\n      </div>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main className=\"App-main\">\n        <VacancyCard />\n      </main>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}